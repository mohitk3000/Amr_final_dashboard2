{"ast":null,"code":"var _jsxFileName = \"/home/mohit/Downloads/AMRbot_dashboard/src/components/Map2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport ROSLIB from 'roslib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RosImageComponent = () => {\n  _s();\n  useEffect(() => {\n    // Connecting to ROS\n    const ros = new ROSLIB.Ros({\n      url: 'ws://localhost:9090'\n    });\n    ros.on('connection', function () {\n      console.log('Connected to websocket server.');\n    });\n    ros.on('error', function (error) {\n      console.log('Error connecting to websocket server: ', error);\n    });\n    ros.on('close', function () {\n      console.log('Connection to websocket server closed.');\n    });\n\n    // Subscribing to Image Topic\n    const imageTopic = new ROSLIB.Topic({\n      ros: ros,\n      name: '/camera/image_raw/compressed',\n      messageType: 'sensor_msgs/CompressedImage'\n    });\n    imageTopic.subscribe(function (message) {\n      document.getElementById('my_image').src = \"data:image/jpg;base64,\" + message.data;\n      imageTopic.unsubscribe();\n    });\n\n    // Cleanup on component unmount\n    return () => {\n      imageTopic.unsubscribe();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ROS Image Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"my_image\",\n      style: {\n        height: '100%',\n        width: '100%',\n        objectFit: 'contain'\n      },\n      src: \"assets/img/placeholder.png\",\n      alt: \"ROS Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(RosImageComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = RosImageComponent;\nexport default RosImageComponent;\nvar _c;\n$RefreshReg$(_c, \"RosImageComponent\");","map":{"version":3,"names":["React","useEffect","ROSLIB","jsxDEV","_jsxDEV","RosImageComponent","_s","ros","Ros","url","on","console","log","error","imageTopic","Topic","name","messageType","subscribe","message","document","getElementById","src","data","unsubscribe","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","height","width","objectFit","alt","_c","$RefreshReg$"],"sources":["/home/mohit/Downloads/AMRbot_dashboard/src/components/Map2.jsx"],"sourcesContent":["\nimport React, { useEffect } from 'react';\nimport ROSLIB from 'roslib';\n\nconst RosImageComponent = () => {\n  useEffect(() => {\n    // Connecting to ROS\n    const ros = new ROSLIB.Ros({\n      url: 'ws://localhost:9090',\n    });\n\n    ros.on('connection', function () {\n      console.log('Connected to websocket server.');\n    });\n\n    ros.on('error', function (error) {\n      console.log('Error connecting to websocket server: ', error);\n    });\n\n    ros.on('close', function () {\n      console.log('Connection to websocket server closed.');\n    });\n\n    // Subscribing to Image Topic\n    const imageTopic = new ROSLIB.Topic({\n      ros: ros,\n      name: '/camera/image_raw/compressed',\n      messageType: 'sensor_msgs/CompressedImage',\n    });\n\n    imageTopic.subscribe(function (message) {\n      document.getElementById('my_image').src = \"data:image/jpg;base64,\" + message.data;\n      imageTopic.unsubscribe();\n    });\n\n    // Cleanup on component unmount\n    return () => {\n      imageTopic.unsubscribe();\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1>ROS Image Dashboard</h1>\n      <img id=\"my_image\" style={{ height: '100%', width: '100%', objectFit: 'contain' }} src=\"assets/img/placeholder.png\" alt=\"ROS Image\" />\n    </div>\n  );\n};\n\nexport default RosImageComponent;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9BL,SAAS,CAAC,MAAM;IACd;IACA,MAAMM,GAAG,GAAG,IAAIL,MAAM,CAACM,GAAG,CAAC;MACzBC,GAAG,EAAE;IACP,CAAC,CAAC;IAEFF,GAAG,CAACG,EAAE,CAAC,YAAY,EAAE,YAAY;MAC/BC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC/C,CAAC,CAAC;IAEFL,GAAG,CAACG,EAAE,CAAC,OAAO,EAAE,UAAUG,KAAK,EAAE;MAC/BF,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEC,KAAK,CAAC;IAC9D,CAAC,CAAC;IAEFN,GAAG,CAACG,EAAE,CAAC,OAAO,EAAE,YAAY;MAC1BC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACvD,CAAC,CAAC;;IAEF;IACA,MAAME,UAAU,GAAG,IAAIZ,MAAM,CAACa,KAAK,CAAC;MAClCR,GAAG,EAAEA,GAAG;MACRS,IAAI,EAAE,8BAA8B;MACpCC,WAAW,EAAE;IACf,CAAC,CAAC;IAEFH,UAAU,CAACI,SAAS,CAAC,UAAUC,OAAO,EAAE;MACtCC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,GAAG,GAAG,wBAAwB,GAAGH,OAAO,CAACI,IAAI;MACjFT,UAAU,CAACU,WAAW,CAAC,CAAC;IAC1B,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXV,UAAU,CAACU,WAAW,CAAC,CAAC;IAC1B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BzB,OAAA;MAAK0B,EAAE,EAAC,UAAU;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,KAAK,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAU,CAAE;MAACZ,GAAG,EAAC,4BAA4B;MAACa,GAAG,EAAC;IAAW;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnI,CAAC;AAEV,CAAC;AAACvB,EAAA,CA3CID,iBAAiB;AAAA+B,EAAA,GAAjB/B,iBAAiB;AA6CvB,eAAeA,iBAAiB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}