{"ast":null,"code":"var _jsxFileName = \"/home/mohit/Downloads/AMRbot_dashboard/src/components/Map2.jsx\";\nimport React, { Component } from 'react';\nimport { Joystick } from 'react-joystick-component';\nimport config from \"../scripts/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Connection extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: new window.ROSLIB.Ros(),\n      connection: false\n    };\n    this.handleMove = this.handleMove.bind(this);\n    this.handleStop = this.handleStop.bind(this);\n    this.view_map = this.view_map.bind(this);\n  }\n  componentDidMount() {\n    this.initConnection();\n    const mapTopic = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: \"/map\",\n      messageType: \"nav_msgs/OccupancyGrid\"\n    });\n    mapTopic.subscribe(message => {\n      // Log received map data to the console\n      console.log(\"Received Map Data: \", message);\n      console.log(\"haare krishna\");\n    });\n  }\n  initConnection() {\n    const {\n      ros\n    } = this.state;\n    try {\n      ros.connect('ws://' + config.ROSBRIDGE_SERVER_IP + ':9090');\n      ros.on('connection', () => {\n        console.log('Connected to ROS Bridge.');\n        // this.setState({ connection: true });\n      });\n\n      ros.on('close', () => {\n        console.log('Connection to ROS Bridge closed.');\n        // this.setState({ connection: false });\n      });\n\n      ros.on('error', error => {\n        console.error('Error connecting to ROS Bridge:', error);\n      });\n    } catch (error) {\n      console.error('Error connecting to ROS Bridge:', error);\n    }\n  }\n  handleMove(event) {\n    const {\n      ros\n    } = this.state;\n    try {\n      const cmdVel = new window.ROSLIB.Topic({\n        ros: ros,\n        name: '/cmd_vel',\n        messageType: 'geometry_msgs/Twist'\n      });\n\n      // Adjust the linear and angular velocities based on joystick movement\n      const twist = new window.ROSLIB.Message({\n        linear: {\n          x: event.y,\n          y: 0.0,\n          z: 0.0\n        },\n        angular: {\n          x: 0.0,\n          y: 0.0,\n          z: -event.x\n        }\n      });\n      cmdVel.publish(twist);\n      console.log('Twist message published successfully.');\n    } catch (error) {\n      console.error('Error publishing Twist message:', error);\n    }\n  }\n  handleStop(event) {\n    // Your stop handling logic here...\n    const {\n      ros\n    } = this.state;\n    try {\n      const cmdVel = new window.ROSLIB.Topic({\n        ros: ros,\n        name: '/cmd_vel',\n        messageType: 'geometry_msgs/Twist'\n      });\n      const twist = new window.ROSLIB.Message({\n        linear: {\n          x: 0.0,\n          // Scale the joystick value for linear velocity\n          y: 0.0,\n          z: 0.0\n        },\n        angular: {\n          x: 0.0,\n          y: 0.0,\n          z: 0.0 // Scale the joystick value for angular velocity\n        }\n      });\n\n      cmdVel.publish(twist);\n      console.log('Twist message published successfully.');\n    } catch (error) {\n      console.error('Error publishing Twist message:', error);\n    }\n  }\n  view_map() {\n    var viewer = new window.ROS2D.Viewer({\n      divID: \"nav_div3\",\n      width: 155,\n      height: 299\n    });\n    var navClient = new window.NAV2D.OccupancyGridClientNav({\n      ros: this.state.ros,\n      rootObject: viewer.scene,\n      viewer: viewer,\n      topic: \"/map\",\n      // Correct the property name here\n      withOrientation: true\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Joystick, {\n        size: 100,\n        sticky: true,\n        baseColor: \"#EEEEEE\",\n        stickColor: \"#BBBBBB\",\n        move: this.handleMove,\n        stop: this.handleStop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"nav_div3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Connection;","map":{"version":3,"names":["React","Component","Joystick","config","jsxDEV","_jsxDEV","Connection","constructor","state","ros","window","ROSLIB","Ros","connection","handleMove","bind","handleStop","view_map","componentDidMount","initConnection","mapTopic","Topic","name","messageType","subscribe","message","console","log","connect","ROSBRIDGE_SERVER_IP","on","error","event","cmdVel","twist","Message","linear","x","y","z","angular","publish","viewer","ROS2D","Viewer","divID","width","height","navClient","NAV2D","OccupancyGridClientNav","rootObject","scene","topic","withOrientation","render","children","size","sticky","baseColor","stickColor","move","stop","fileName","_jsxFileName","lineNumber","columnNumber","id"],"sources":["/home/mohit/Downloads/AMRbot_dashboard/src/components/Map2.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { Joystick } from 'react-joystick-component';\nimport config from \"../scripts/config\";\n\nclass Connection extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: new window.ROSLIB.Ros(),\n      connection: false,\n    };\n\n    this.handleMove = this.handleMove.bind(this);\n    this.handleStop = this.handleStop.bind(this);\n    this.view_map=this.view_map.bind(this)\n  }\n\n  componentDidMount() {\n    this.initConnection();\n    const mapTopic = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: \"/map\",\n      messageType: \"nav_msgs/OccupancyGrid\",\n    });\n\n    mapTopic.subscribe((message) => {\n      // Log received map data to the console\n      console.log(\"Received Map Data: \", message);\n      console.log(\"haare krishna\");\n    });\n  }\n\n  initConnection() {\n    const { ros } = this.state;\n\n    try {\n      ros.connect('ws://'+config.ROSBRIDGE_SERVER_IP+':9090');\n\n      ros.on('connection', () => {\n        console.log('Connected to ROS Bridge.');\n        // this.setState({ connection: true });\n      });\n\n      ros.on('close', () => {\n        console.log('Connection to ROS Bridge closed.');\n        // this.setState({ connection: false });\n      });\n\n      ros.on('error', (error) => {\n        console.error('Error connecting to ROS Bridge:', error);\n      });\n    } catch (error) {\n      console.error('Error connecting to ROS Bridge:', error);\n    }\n  }\n\n  handleMove(event) {\n    const { ros } = this.state;\n  \n    try {\n      const cmdVel = new window.ROSLIB.Topic({\n        ros: ros,\n        name: '/cmd_vel',\n        messageType: 'geometry_msgs/Twist',\n      });\n  \n     \n  \n      // Adjust the linear and angular velocities based on joystick movement\n      const twist = new window.ROSLIB.Message({\n        linear: {\n          x: event.y,\n          y: 0.0,\n          z: 0.0,\n        },\n        angular: {\n          x: 0.0,\n          y: 0.0,\n          z: -event.x,\n        },\n      });\n  \n      cmdVel.publish(twist);\n      console.log('Twist message published successfully.');\n    } catch (error) {\n      console.error('Error publishing Twist message:', error);\n    }\n  }\n  \n\n  handleStop(event) {\n    // Your stop handling logic here...\n    const { ros } = this.state;\n\n    try {\n      const cmdVel = new window.ROSLIB.Topic({\n        ros: ros,\n        name: '/cmd_vel',\n        messageType: 'geometry_msgs/Twist',\n      });\n\n      const twist = new window.ROSLIB.Message({\n        linear: {\n          x: 0.0, // Scale the joystick value for linear velocity\n          y: 0.0,\n          z: 0.0,\n        },\n        angular: {\n          x: 0.0,\n          y: 0.0,\n          z: 0.0, // Scale the joystick value for angular velocity\n        },\n      });\n\n      cmdVel.publish(twist);\n      console.log('Twist message published successfully.');\n    } catch (error) {\n      console.error('Error publishing Twist message:', error);\n    }\n  }\n  view_map(){\n    var viewer=new window.ROS2D.Viewer({\n      divID:\"nav_div3\",\n      width:155,\n      height:299,\n    });\n    var navClient = new window.NAV2D.OccupancyGridClientNav({\n      ros: this.state.ros,\n      rootObject: viewer.scene,\n      viewer: viewer,\n      topic: \"/map\", // Correct the property name here\n      withOrientation: true,\n    });\n    \n    \n    \n  }\n  \n\n  render() {\n    return (\n      <div>\n        <Joystick\n          size={100}\n          sticky={true}\n          baseColor=\"#EEEEEE\"\n          stickColor=\"#BBBBBB\"\n          move={this.handleMove}\n          stop={this.handleStop}\n        ></Joystick>\n         <div id=\"nav_div3\"></div>\n\n        \n      </div>\n    );\n  }\n}\n\nexport default Connection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}