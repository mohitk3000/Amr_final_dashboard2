{"ast":null,"code":"var _jsxFileName = \"/home/mohit/Downloads/AMRbot_dashboard/src/components/RobotState.jsx\";\nimport React, { useState } from 'react';\nimport { Row, Col, Container, Button } from 'react-bootstrap';\nimport config from \"../scripts/config\";\nimport * as Three from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RobotState extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: new window.ROSLIB.Ros(),\n      x: 0,\n      y: 0,\n      orientation: 0,\n      linear_velocity: 0,\n      angular_velocity: 0\n    };\n    this.init_connection();\n  }\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    try {\n      this.state.ros.connect('ws://' + config.ROSBRIDGE_SERVER_IP + ':9090');\n      this.state.ros.on('connection', () => {\n        console.log('Connected to ROS Bridge.');\n        this.getRobotState(); // Move the subscription here\n      });\n\n      this.state.ros.on('close', () => {\n        console.log('Connection to ROS Bridge closed.');\n        // this.setState({ connection: false });\n      });\n\n      this.state.ros.on('error', error => {\n        console.error('Error connecting to ROS Bridge:', error);\n      });\n    } catch (error) {\n      console.error('Error connecting to ROS Bridge:', error);\n    }\n  }\n  componentDidMount() {\n    // Don't need to call getRobotState() here since it's already called in the 'connection' event\n    this.getRobotState();\n  }\n  getRobotState() {\n    var pose_subscriber = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: \"/odom\",\n      messageType: \"nav_msgs/msg/Odometry\"\n    });\n    pose_subscriber.subscribe(message => {\n      this.setState({\n        x: message.pose.pose.position.x.toFixed(2)\n      });\n      this.setState({\n        orientation: this.getOrientationFromQuaternion(message.pose.pose.orientation).toFixed(2)\n      });\n      this.setState({\n        y: message.pose.pose.position.y.toFixed(2)\n      });\n    });\n\n    //velocity subscriber\n\n    var velocity_subscriber = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: \"/odom\",\n      messageType: \"nav_msgs/msg/Odometry\"\n    });\n    velocity_subscriber.subscribe(message => {\n      this.setState({\n        linear_velocity: message.twist.twist.linear.x.toFixed(2)\n      });\n      this.setState({\n        angular_velocity: message.twist.twist.angular.z.toFixed(2)\n      });\n    });\n  }\n  getOrientationFromQuaternion(ros_orientation_quaternion) {\n    var q = new Three.Quaternion(ros_orientation_quaternion.x, ros_orientation_quaternion.y, ros_orientation_quaternion.z, ros_orientation_quaternion.w);\n    var RPY = new Three.Euler().setFromQuaternion(q);\n    return RPY.z * (180 / Math.PI);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"robot_pos\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mt-4\",\n            children: \"Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"x: \", this.state.x]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"y: \", this.state.y]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"Orientation: \", this.state.orientation]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mt-4\",\n            children: \"Velocities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"Linear Velocity: \", this.state.linear_velocity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"Angular Velocity: \", this.state.angular_velocity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default RobotState;","map":{"version":3,"names":["React","useState","Row","Col","Container","Button","config","Three","jsxDEV","_jsxDEV","RobotState","Component","constructor","state","ros","window","ROSLIB","Ros","x","y","orientation","linear_velocity","angular_velocity","init_connection","connect","ROSBRIDGE_SERVER_IP","on","console","log","getRobotState","error","componentDidMount","pose_subscriber","Topic","name","messageType","subscribe","message","setState","pose","position","toFixed","getOrientationFromQuaternion","velocity_subscriber","twist","linear","angular","z","ros_orientation_quaternion","q","Quaternion","w","RPY","Euler","setFromQuaternion","Math","PI","render","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/mohit/Downloads/AMRbot_dashboard/src/components/RobotState.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Row, Col, Container, Button } from 'react-bootstrap';\nimport config from \"../scripts/config\";\nimport *as Three from \"three\";\n\nclass RobotState extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: new window.ROSLIB.Ros(),\n      x: 0,\n      y: 0,\n      orientation: 0,\n      linear_velocity: 0,\n      angular_velocity: 0,\n    };\n    this.init_connection();\n  }\n\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n\n    try {\n      this.state.ros.connect('ws://' + config.ROSBRIDGE_SERVER_IP + ':9090');\n\n      this.state.ros.on('connection', () => {\n        console.log('Connected to ROS Bridge.');\n        this.getRobotState(); // Move the subscription here\n      });\n\n      this.state.ros.on('close', () => {\n        console.log('Connection to ROS Bridge closed.');\n        // this.setState({ connection: false });\n      });\n\n      this.state.ros.on('error', (error) => {\n        console.error('Error connecting to ROS Bridge:', error);\n      });\n    } catch (error) {\n      console.error('Error connecting to ROS Bridge:', error);\n    }\n  }\n\n  componentDidMount() {\n    // Don't need to call getRobotState() here since it's already called in the 'connection' event\n    this.getRobotState();\n  }\n\n  getRobotState() {\n    var pose_subscriber = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: \"/odom\",\n      messageType: \"nav_msgs/msg/Odometry\"\n    });\n\n    pose_subscriber.subscribe((message) => {\n      this.setState({\n        x:message.pose.pose.position.x.toFixed(2)\n      });\n      this.setState({\n        \n        orientation:this.getOrientationFromQuaternion(\n          message.pose.pose.orientation\n        ).toFixed(2),\n      });\n      \n      this.setState({\n        y:message.pose.pose.position.y.toFixed(2)\n      });\n    });\n\n//velocity subscriber\n\n    var velocity_subscriber=new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: \"/odom\",\n      messageType: \"nav_msgs/msg/Odometry\"\n  \n    });\n  \n    velocity_subscriber.subscribe((message)=>{\n      this.setState({linear_velocity:message.twist.twist.linear.x.toFixed(2)});\n      this.setState({angular_velocity:message.twist.twist.angular.z.toFixed(2)});\n  \n    });\n  }\n\n  \n\n  \n  getOrientationFromQuaternion(ros_orientation_quaternion) {\n    var q = new Three.Quaternion(\n      ros_orientation_quaternion.x,\n      ros_orientation_quaternion.y,\n      ros_orientation_quaternion.z,\n      ros_orientation_quaternion.w\n    );\n    var RPY = new Three.Euler().setFromQuaternion(q);\n    return RPY.z * (180 / Math.PI);\n  }\n\n  render() {\n    return (\n      <div id = \"robot_pos\">\n        <Row>\n          <Col>\n            <h4 className='mt-4'>Position</h4>\n            <p className='mt-0'>x: {this.state.x}</p>\n            <p className='mt-0'>y: {this.state.y}</p>\n            <p className='mt-0'>Orientation: {this.state.orientation}</p>\n          </Col>\n          \n\n\n        </Row>\n        <Row>\n          <Col>\n            <h4 className='mt-4'>Velocities</h4>\n            <p className='mt-0'>Linear Velocity: {this.state.linear_velocity}</p>\n            <p className='mt-0'>Angular Velocity: {this.state.angular_velocity}</p>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default RobotState;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}