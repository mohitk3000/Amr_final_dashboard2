{"ast":null,"code":"var _jsxFileName = \"/home/mohit/Downloads/AMRbot_dashboard/src/components/RobotState.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport config from \"../scripts/config\";\nimport * as Three from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Point = ({\n  position\n}) => {\n  _s();\n  const meshRef = useRef();\n  useFrame(() => {\n    // Update the position of the mesh based on the prop\n    meshRef.current.position.x = position.x;\n    meshRef.current.position.y = position.y;\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: meshRef,\n    children: [/*#__PURE__*/_jsxDEV(\"sphereBufferGeometry\", {\n      args: [0.1, 32, 32]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n      color: \"red\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Point, \"/vg1AmA8+P3+Fj0/y210JTVKtL0=\", false, function () {\n  return [useFrame];\n});\n_c = Point;\nconst RobotState = () => {\n  _s2();\n  const [robotPosition, setRobotPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [linearVelocity, setLinearVelocity] = useState(0);\n  const [angularVelocity, setAngularVelocity] = useState(0);\n  const updateRobotPosition = message => {\n    setRobotPosition({\n      x: message.pose.pose.position.x.toFixed(2),\n      y: message.pose.pose.position.y.toFixed(2)\n    });\n  };\n  const updateVelocities = message => {\n    setLinearVelocity(message.twist.twist.linear.x.toFixed(2));\n    setAngularVelocity(message.twist.twist.angular.z.toFixed(2));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {\n      children: /*#__PURE__*/_jsxDEV(Point, {\n        position: robotPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mt-4\",\n      children: \"Position\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-0\",\n      children: [\"x: \", robotPosition.x]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-0\",\n      children: [\"y: \", robotPosition.y]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mt-4\",\n      children: \"Velocities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-0\",\n      children: [\"Linear Velocity: \", linearVelocity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-0\",\n      children: [\"Angular Velocity: \", angularVelocity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s2(RobotState, \"lxoHs3pn9Kcurjd9ByngtTJIa6o=\");\n_c2 = RobotState;\nexport default RobotState;\nvar _c, _c2;\n$RefreshReg$(_c, \"Point\");\n$RefreshReg$(_c2, \"RobotState\");","map":{"version":3,"names":["React","useState","useRef","Canvas","useFrame","config","Three","jsxDEV","_jsxDEV","Point","position","_s","meshRef","current","x","y","ref","children","args","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","RobotState","_s2","robotPosition","setRobotPosition","linearVelocity","setLinearVelocity","angularVelocity","setAngularVelocity","updateRobotPosition","message","pose","toFixed","updateVelocities","twist","linear","angular","z","className","_c2","$RefreshReg$"],"sources":["/home/mohit/Downloads/AMRbot_dashboard/src/components/RobotState.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport config from \"../scripts/config\";\nimport * as Three from \"three\";\n\nconst Point = ({ position }) => {\n  const meshRef = useRef();\n\n  useFrame(() => {\n    // Update the position of the mesh based on the prop\n    meshRef.current.position.x = position.x;\n    meshRef.current.position.y = position.y;\n  });\n\n  return (\n    <mesh ref={meshRef}>\n      <sphereBufferGeometry args={[0.1, 32, 32]} />\n      <meshBasicMaterial color=\"red\" />\n    </mesh>\n  );\n};\n\nconst RobotState = () => {\n  const [robotPosition, setRobotPosition] = useState({ x: 0, y: 0 });\n  const [linearVelocity, setLinearVelocity] = useState(0);\n  const [angularVelocity, setAngularVelocity] = useState(0);\n\n  const updateRobotPosition = (message) => {\n    setRobotPosition({\n      x: message.pose.pose.position.x.toFixed(2),\n      y: message.pose.pose.position.y.toFixed(2),\n    });\n  };\n\n  const updateVelocities = (message) => {\n    setLinearVelocity(message.twist.twist.linear.x.toFixed(2));\n    setAngularVelocity(message.twist.twist.angular.z.toFixed(2));\n  };\n\n  return (\n    <div>\n      <Canvas>\n        <Point position={robotPosition} />\n      </Canvas>\n      <h4 className='mt-4'>Position</h4>\n      <p className='mt-0'>x: {robotPosition.x}</p>\n      <p className='mt-0'>y: {robotPosition.y}</p>\n      <h4 className='mt-4'>Velocities</h4>\n      <p className='mt-0'>Linear Velocity: {linearVelocity}</p>\n      <p className='mt-0'>Angular Velocity: {angularVelocity}</p>\n    </div>\n  );\n};\n\nexport default RobotState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}